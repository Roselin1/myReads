{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getBooks = createAsyncThunk(\"fetchBooks\", async () => {\n  Apis.getAll().then(books => {\n    return books;\n  });\n});\nconst bookListSlice = createSlice({\n  name: 'bookListSlice',\n  initialState: {\n    books: [],\n    book: {},\n    error: null,\n    searchResultBooks: []\n  },\n  reducers: {\n    getAllBooks(state, action) {\n      state.books = action.payload;\n    },\n\n    updateBook(state, action) {\n      state.books = action.payload;\n    },\n\n    searchBooks(state, action) {\n      state.searchResultBooks = action.payload;\n    },\n\n    getBook(state, action) {\n      state.book = action.payload;\n    }\n\n  },\n  extraReducers: {\n    [getBooks.fulfilled]: (state, action) => {\n      state.books = action.payload;\n    },\n    [getBooks.rejected]: (state, action) => {\n      state.books = \"error\";\n    }\n  }\n});\nexport const {} = usersSlice.actions;\nexport default bookListSlice.reducer;","map":{"version":3,"sources":["/home/dev/myreads/starter/myReads/src/features/bookList/bookListSlice.js"],"names":["createSlice","createAsyncThunk","getBooks","Apis","getAll","then","books","bookListSlice","name","initialState","book","error","searchResultBooks","reducers","getAllBooks","state","action","payload","updateBook","searchBooks","getBook","extraReducers","fulfilled","rejected","usersSlice","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,gBAAvB,QAA+C,kBAA/C;AAEA,OAAO,MAAMC,QAAQ,GAAGD,gBAAgB,CAAC,YAAD,EAAe,YAAY;AAC/DE,EAAAA,IAAI,CAACC,MAAL,GAAcC,IAAd,CAAmBC,KAAK,IAAG;AACvB,WAAOA,KAAP;AACD,GAFH;AAGD,CAJqC,CAAjC;AAKP,MAAMC,aAAa,GAAGP,WAAW,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,eADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVH,IAAAA,KAAK,EAAC,EADI;AAEVI,IAAAA,IAAI,EAAC,EAFK;AAGVC,IAAAA,KAAK,EAAE,IAHG;AAIVC,IAAAA,iBAAiB,EAAC;AAJR,GAFgB;AAQ9BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACT,KAAN,GAAcU,MAAM,CAACC,OAArB;AACH,KAHK;;AAINC,IAAAA,UAAU,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACtBD,MAAAA,KAAK,CAACT,KAAN,GAAcU,MAAM,CAACC,OAArB;AAEH,KAPK;;AAQNE,IAAAA,WAAW,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACvBD,MAAAA,KAAK,CAACH,iBAAN,GAA0BI,MAAM,CAACC,OAAjC;AACH,KAVK;;AAWNG,IAAAA,OAAO,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACnBD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAApB;AACH;;AAbK,GARoB;AAuB9BI,EAAAA,aAAa,EAAE;AACX,KAACnB,QAAQ,CAACoB,SAAV,GAAsB,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACT,KAAN,GAAcU,MAAM,CAACC,OAArB;AACD,KAHU;AAIX,KAACf,QAAQ,CAACqB,QAAV,GAAqB,CAACR,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACT,KAAN,GAAc,OAAd;AACD;AANU;AAvBe,CAAD,CAAjC;AAgCA,OAAO,MAAM,KAAKkB,UAAU,CAACC,OAAtB;AACP,eAAelB,aAAa,CAACmB,OAA7B","sourcesContent":["import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getBooks = createAsyncThunk(\"fetchBooks\", async () => {\n    Apis.getAll().then(books =>{\n        return books\n      })\n  });\nconst bookListSlice = createSlice({\n    name: 'bookListSlice',\n    initialState: {\n        books:[],\n        book:{},\n        error: null,\n        searchResultBooks:[]\n    },\n    reducers: {\n        getAllBooks(state, action) {\n            state.books = action.payload;\n        },\n        updateBook(state, action) {\n            state.books = action.payload;\n\n        },\n        searchBooks(state, action) {\n            state.searchResultBooks = action.payload;\n        },\n        getBook(state, action) {\n            state.book = action.payload;\n        },\n    },\n    extraReducers: {\n        [getBooks.fulfilled]: (state, action) => {\n          state.books = action.payload;\n        },\n        [getBooks.rejected]: (state, action) => {\n          state.books = \"error\";\n        },\n      },\n})\nexport const {} = usersSlice.actions;\nexport default bookListSlice.reducer;"]},"metadata":{},"sourceType":"module"}