{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as BooksAPI from \"../../BooksAPI\";\nexport const getBooks = createAsyncThunk(\"fetchBooks\", async () => {\n  BooksAPI.getAll().then(books => {\n    return books;\n  });\n});\nconst bookListSlice = createSlice({\n  name: 'bookListSlice',\n  initialState: {\n    books: [],\n    book: {},\n    error: null,\n    searchResultBooks: []\n  },\n  reducers: {// getAllBooks(state, action) {\n    //     state.books = action.payload;\n    // },\n    // updateBook(state, action) {\n    //     state.books = action.payload;\n    // },\n    // searchBooks(state, action) {\n    //     state.searchResultBooks = action.payload;\n    // },\n    // getBook(state, action) {\n    //     state.book = action.payload;\n    // },\n  },\n  extraReducers: {\n    [getBooks.fulfilled]: (state, action) => {\n      state.books = action.payload;\n    },\n    [getBooks.rejected]: (state, action) => {\n      state.books = \"error\";\n    }\n  }\n});\nexport const {} = bookListSlice.actions;\nexport default bookListSlice.reducer;","map":{"version":3,"sources":["/home/dev/myreads/starter/myReads/src/features/bookList/bookListSlice.js"],"names":["createSlice","createAsyncThunk","BooksAPI","getBooks","getAll","then","books","bookListSlice","name","initialState","book","error","searchResultBooks","reducers","extraReducers","fulfilled","state","action","payload","rejected","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,gBAAvB,QAA+C,kBAA/C;AACA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;AAEA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC,YAAD,EAAe,YAAY;AAC/DC,EAAAA,QAAQ,CAACE,MAAT,GAAkBC,IAAlB,CAAuBC,KAAK,IAAG;AAC3B,WAAOA,KAAP;AACD,GAFH;AAGD,CAJqC,CAAjC;AAKP,MAAMC,aAAa,GAAGP,WAAW,CAAC;AAC9BQ,EAAAA,IAAI,EAAE,eADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVH,IAAAA,KAAK,EAAC,EADI;AAEVI,IAAAA,IAAI,EAAC,EAFK;AAGVC,IAAAA,KAAK,EAAE,IAHG;AAIVC,IAAAA,iBAAiB,EAAC;AAJR,GAFgB;AAQ9BC,EAAAA,QAAQ,EAAE,CACN;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAbM,GARoB;AAuB9BC,EAAAA,aAAa,EAAE;AACX,KAACX,QAAQ,CAACY,SAAV,GAAsB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACV,KAAN,GAAcW,MAAM,CAACC,OAArB;AACD,KAHU;AAIX,KAACf,QAAQ,CAACgB,QAAV,GAAqB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACV,KAAN,GAAc,OAAd;AACD;AANU;AAvBe,CAAD,CAAjC;AAgCA,OAAO,MAAM,KAAKC,aAAa,CAACa,OAAzB;AACP,eAAeb,aAAa,CAACc,OAA7B","sourcesContent":["import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as BooksAPI from \"../../BooksAPI\";\n\nexport const getBooks = createAsyncThunk(\"fetchBooks\", async () => {\n    BooksAPI.getAll().then(books =>{\n        return books\n      })\n  });\nconst bookListSlice = createSlice({\n    name: 'bookListSlice',\n    initialState: {\n        books:[],\n        book:{},\n        error: null,\n        searchResultBooks:[]\n    },\n    reducers: {\n        // getAllBooks(state, action) {\n        //     state.books = action.payload;\n        // },\n        // updateBook(state, action) {\n        //     state.books = action.payload;\n\n        // },\n        // searchBooks(state, action) {\n        //     state.searchResultBooks = action.payload;\n        // },\n        // getBook(state, action) {\n        //     state.book = action.payload;\n        // },\n    },\n    extraReducers: {\n        [getBooks.fulfilled]: (state, action) => {\n          state.books = action.payload;\n        },\n        [getBooks.rejected]: (state, action) => {\n          state.books = \"error\";\n        },\n      },\n})\nexport const {} = bookListSlice.actions;\nexport default bookListSlice.reducer;"]},"metadata":{},"sourceType":"module"}