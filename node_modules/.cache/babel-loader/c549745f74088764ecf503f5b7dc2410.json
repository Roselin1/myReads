{"ast":null,"code":"var _jsxFileName = \"/home/dev/myreads/starter/src/features/search/searchPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport * as BooksAPI from \"../../BooksAPI\";\nimport { useState, useEffect } from \"react\";\nimport Book from \"../book/book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const navigateTo = useNavigate(''); //let searchResult = [];\n\n  const [searchResult, setSearchResult] = useState();\n  useEffect(() => {\n    setSearchResult([]);\n  }, [searchResult]);\n\n  const searchForBook = event => {\n    setTimeout(() => {\n      console.log(event.target.value);\n      BooksAPI.search(event.target.value, 100).then(res => {\n        console.log(res);\n        setSearchResult(res); //setSearchResult({books: res})\n\n        console.log(searchResult);\n      }).catch(err => {\n        console.log(err);\n      });\n    }, 1000);\n  };\n\n  const searchView = () => {\n    console.log('result', searchResult);\n\n    if (searchResult.length) {\n      searchResult.map(book => {\n        return /*#__PURE__*/_jsxDEV(Book, {\n          title: book.title,\n          imageUrl: book.imageLinks.thumbnail,\n          author: book.authors[0] // shelf={props.shelf}\n          ,\n          book: book // updateBookStauts = {updateStatus}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" No Data Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"close-search\",\n        onClick: () => navigateTo('/'),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: searchForBook,\n          placeholder: \"Search by title, author, or ISBN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: searchView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"TMNJN+EougdWCOcSBgobsQlDatI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/dev/myreads/starter/src/features/search/searchPage.js"],"names":["React","useNavigate","BooksAPI","useState","useEffect","Book","Search","navigateTo","searchResult","setSearchResult","searchForBook","event","setTimeout","console","log","target","value","search","then","res","catch","err","searchView","length","map","book","title","imageLinks","thumbnail","authors"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAMC,UAAU,GAAGN,WAAW,CAAC,EAAD,CAA9B,CADiB,CAEjB;;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,EAAhD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAFM,EAEJ,CAACD,YAAD,CAFI,CAAT;;AAKD,QAAME,aAAa,GAAIC,KAAD,IAAW;AAChCC,IAAAA,UAAU,CAAC,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,MAAN,CAAaC,KAAzB;AACAd,MAAAA,QAAQ,CAACe,MAAT,CAAgBN,KAAK,CAACI,MAAN,CAAaC,KAA7B,EAAoC,GAApC,EACDE,IADC,CACKC,GAAD,IAAS;AACbN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACAV,QAAAA,eAAe,CAACU,GAAD,CAAf,CAFa,CAGb;;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AAED,OAPC,EAQDY,KARC,CAQMC,GAAD,IAAS;AACdR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACD,OAVC;AAWH,KAbS,EAaP,IAbO,CAAV;AAeC,GAhBF;;AAiBC,QAAMC,UAAU,GAAG,MAAM;AACrBT,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,YAAtB;;AACA,QAAGA,YAAY,CAACe,MAAhB,EAAwB;AAInBf,MAAAA,YAAY,CAACgB,GAAb,CAAkBC,IAAD,IAAS;AACvB,4BAAQ,QAAC,IAAD;AACR,UAAA,KAAK,EAAEA,IAAI,CAACC,KADJ;AAER,UAAA,QAAQ,EAAED,IAAI,CAACE,UAAL,CAAgBC,SAFlB;AAGR,UAAA,MAAM,EAAEH,IAAI,CAACI,OAAL,CAAa,CAAb,CAHA,CAIR;AAJQ;AAKR,UAAA,IAAI,EAAIJ,IALA,CAMR;;AANQ;AAAA;AAAA;AAAA;AAAA,gBAAR;AASH,OAVA;AAYJ,KAhBD,MAiBK;AACF,0BAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACF;AAGJ,GAxBD;;AAyBF,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACM;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,OAAO,EAAE,MAAMlB,UAAU,CAAC,GAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AACe,UAAA,QAAQ,EAAEG,aADzB;AAEE,UAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,eAeM;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACGY;AADH;AAAA;AAAA;AAAA;AAAA,YAfN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1ED;;GAAMhB,M;UACiBL,W;;;KADjBK,M;AA4EN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport * as BooksAPI from \"../../BooksAPI\";\nimport { useState, useEffect} from \"react\";\nimport Book from \"../book/book\";\nconst Search = () => {\n    const navigateTo = useNavigate('');\n    //let searchResult = [];\n    const [searchResult, setSearchResult] = useState();\n\n\n    useEffect(() => {\n        setSearchResult([]);\n      }, [searchResult]);\n\n\n   const searchForBook = (event) => {\n    setTimeout(() => {\n        console.log(event.target.value);\n        BooksAPI.search(event.target.value, 100)\n      .then((res) => {\n        console.log(res);\n        setSearchResult(res);\n        //setSearchResult({books: res})\n        console.log(searchResult);\n        \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    }, 1000);   \n\n    }\n    const searchView = () => {\n        console.log('result', searchResult);\n        if(searchResult.length) {\n\n            \n\n             searchResult.map((book)=> {\n                return( <Book\n                title={book.title}\n                imageUrl={book.imageLinks.thumbnail}\n                author={book.authors[0]}\n                // shelf={props.shelf}\n                book = {book}\n                // updateBookStauts = {updateStatus}\n              ></Book>)\n    \n            })\n            \n        }\n        else {\n           return ( <div> No Data Match</div>)\n        }\n        \n\n    }\n  return (\n    <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <a\n              className=\"close-search\"\n              onClick={() => navigateTo('/')}\n            >\n              Close\n            </a>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"  onChange={searchForBook} \n                placeholder=\"Search by title, author, or ISBN\"\n              />\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            {searchView}\n          </div>\n        </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}