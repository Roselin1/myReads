{"ast":null,"code":"var _jsxFileName = \"/home/dev/myreads/starter/src/features/bookList/bookList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"../../BooksAPI\";\nimport Book from \"../book/book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = props => {\n  _s();\n\n  const [bookList, updateBooks] = useState({\n    bookShelfs: {\n      shelf: '',\n      books: []\n    }\n  });\n  useEffect(() => {\n    getAllBooks();\n  }, []);\n\n  const getAllBooks = () => {\n    BooksAPI.getAll().then(res => {\n      props.shelf.map(el => {\n        const bookShelfs = bookList.books.filter(book => book.shelf === el);\n        updateBooks({\n          bookShelfs: {\n            shelf: el,\n            books: bookShelfs\n          }\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const updateStatus = (status, book) => {\n    BooksAPI.update(book, status).then(res => {\n      console.log(res);\n      getAllBooks();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const bookListView = bookList.bookShelfs.books.map((book, index) => {\n    return /*#__PURE__*/_jsxDEV(Book, {\n      title: book.title,\n      imageUrl: book.imageLinks.thumbnail,\n      author: book.authors[0],\n      shelf: props.shelf,\n      book: book,\n      updateBookStauts: updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bookshelf-title\",\n          children: props.shelf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshelf-books\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"books-grid\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", bookListView, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), \">\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BookList, \"FL4Eq6l1s85wnGeAzpuesCs2MQE=\");\n\n_c = BookList;\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/home/dev/myreads/starter/src/features/bookList/bookList.js"],"names":["useState","useEffect","BooksAPI","Book","BookList","props","bookList","updateBooks","bookShelfs","shelf","books","getAllBooks","getAll","then","res","map","el","filter","book","catch","err","console","log","updateStatus","status","update","bookListView","index","title","imageLinks","thumbnail","authors"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,UAAU,EAAE;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE;AAAnB;AAD2B,GAAD,CAAxC;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,MAAM;AACxBT,IAAAA,QAAQ,CAACU,MAAT,GACGC,IADH,CACSC,GAAD,IAAS;AACbT,MAAAA,KAAK,CAACI,KAAN,CAAYM,GAAZ,CAAiBC,EAAD,IAAQ;AAEtB,cAAMR,UAAU,GAAGF,QAAQ,CAACI,KAAT,CAAeO,MAAf,CAChBC,IAAD,IAAUA,IAAI,CAACT,KAAL,KAAeO,EADR,CAAnB;AAGAT,QAAAA,WAAW,CAAC;AAAEC,UAAAA,UAAU,EAAE;AAACC,YAAAA,KAAK,EAACO,EAAP;AAAYN,YAAAA,KAAK,EAACF;AAAlB;AAAd,SAAD,CAAX;AAED,OAPD;AASD,KAXH,EAYGW,KAZH,CAYUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAdH;AAgBD,GAjBD;;AAmBA,QAAMG,YAAY,GAAG,CAACC,MAAD,EAASN,IAAT,KAAkB;AACpChB,IAAAA,QAAQ,CAACuB,MAAT,CAAgBP,IAAhB,EAAqBM,MAArB,EACEX,IADF,CACQC,GAAD,IAAS;AACbO,MAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACAH,MAAAA,WAAW;AACZ,KAJF,EAKEQ,KALF,CAKSC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPF;AASF,GAVD;;AAYA,QAAMM,YAAY,GAAGpB,QAAQ,CAACE,UAAT,CAAoBE,KAApB,CAA0BK,GAA1B,CAA8B,CAACG,IAAD,EAAOS,KAAP,KAAiB;AAClE,wBACE,QAAC,IAAD;AACE,MAAA,KAAK,EAAET,IAAI,CAACU,KADd;AAEE,MAAA,QAAQ,EAAEV,IAAI,CAACW,UAAL,CAAgBC,SAF5B;AAGE,MAAA,MAAM,EAAEZ,IAAI,CAACa,OAAL,CAAa,CAAb,CAHV;AAIE,MAAA,KAAK,EAAE1B,KAAK,CAACI,KAJf;AAKE,MAAA,IAAI,EAAIS,IALV;AAME,MAAA,gBAAgB,EAAIK;AANtB;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXoB,CAArB;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAiClB,KAAK,CAACI;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,mCACE;AAAA,8BAAMiB,YAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnED;;GAAMtB,Q;;KAAAA,Q;AAqEN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as BooksAPI from \"../../BooksAPI\";\nimport Book from \"../book/book\";\n\nconst BookList = (props) => {\n  const [bookList, updateBooks] = useState({\n    bookShelfs: {shelf: '', books: []}\n  });\n\n  useEffect(() => {\n    getAllBooks();\n  }, []);\n\n  const getAllBooks = () => {\n    BooksAPI.getAll()\n      .then((res) => {\n        props.shelf.map((el) => {\n\n          const bookShelfs = bookList.books.filter(\n            (book) => book.shelf === el\n          );\n          updateBooks({ bookShelfs: {shelf:el , books:bookShelfs}});\n\n        })\n        \n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n  }\n\n  const updateStatus = (status, book) => {\n     BooksAPI.update(book,status)\n      .then((res) => {\n        console.log(res);\n        getAllBooks();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    \n  }\n  \n  const bookListView = bookList.bookShelfs.books.map((book, index) => {\n    return (\n      <Book\n        title={book.title}\n        imageUrl={book.imageLinks.thumbnail}\n        author={book.authors[0]}\n        shelf={props.shelf}\n        book = {book}\n        updateBookStauts = {updateStatus}\n      ></Book>\n    );\n  });\n  return (\n    <div className=\"list-books-content\">\n      <div>\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{props.shelf}</h2>\n          <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n              <li> {bookListView} </li>\n            </ol>\n          </div>\n        </div>\n      </div>\n      >\n    </div>\n  );\n};\n\nexport default BookList;\n"]},"metadata":{},"sourceType":"module"}