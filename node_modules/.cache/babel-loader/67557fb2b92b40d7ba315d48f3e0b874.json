{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as BooksAPI from \"../../BooksAPI\";\nexport const getBooks = createAsyncThunk(\"fetchBooks\", async () => {\n  return BooksAPI.getAll().then(books => {\n    console.log(books);\n    return books;\n  });\n});\nexport const updateBooks = createAsyncThunk(\"updateBooks\", async payload => {\n  console.log(book);\n  console.log(status); // return BooksAPI.update(book, status).then(books =>{\n  //     console.log(books)\n  //     // return getBooks();\n  //   })\n});\nconst bookListSlice = createSlice({\n  name: 'bookListSlice',\n  initialState: {\n    books: [],\n    book: {},\n    error: null,\n    searchResultBooks: []\n  },\n  reducers: {},\n  extraReducers: {\n    [getBooks.fulfilled]: (state, action) => {\n      state.books = action.payload;\n    },\n    [getBooks.rejected]: (state, action) => {\n      state.books = \"error\";\n    },\n    [updateBooks.fulfilled]: (state, action) => {\n      state.books = action.payload;\n    },\n    [updateBooks.rejected]: (state, action) => {\n      state.books = \"error\";\n    }\n  }\n});\nexport const {} = bookListSlice.actions;\nexport default bookListSlice.reducer;","map":{"version":3,"sources":["/home/dev/myreads/starter/myReads/src/features/bookList/bookListSlice.js"],"names":["createSlice","createAsyncThunk","BooksAPI","getBooks","getAll","then","books","console","log","updateBooks","payload","book","status","bookListSlice","name","initialState","error","searchResultBooks","reducers","extraReducers","fulfilled","state","action","rejected","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,gBAAvB,QAA+C,kBAA/C;AACA,OAAO,KAAKC,QAAZ,MAA0B,gBAA1B;AAEA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC,YAAD,EAAe,YAAY;AAC/D,SAAOC,QAAQ,CAACE,MAAT,GAAkBC,IAAlB,CAAuBC,KAAK,IAAG;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAOA,KAAP;AACD,GAHI,CAAP;AAID,CALqC,CAAjC;AAML,OAAO,MAAMG,WAAW,GAAGR,gBAAgB,CAAC,aAAD,EAAgB,MAAOS,OAAP,IAAmB;AAC5EH,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ,EAF4E,CAG5E;AACA;AACA;AACA;AACD,CAP0C,CAApC;AAQT,MAAMC,aAAa,GAAGb,WAAW,CAAC;AAC9Bc,EAAAA,IAAI,EAAE,eADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVT,IAAAA,KAAK,EAAC,EADI;AAEVK,IAAAA,IAAI,EAAC,EAFK;AAGVK,IAAAA,KAAK,EAAE,IAHG;AAIVC,IAAAA,iBAAiB,EAAC;AAJR,GAFgB;AAQ9BC,EAAAA,QAAQ,EAAE,EARoB;AAW9BC,EAAAA,aAAa,EAAE;AACX,KAAChB,QAAQ,CAACiB,SAAV,GAAsB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvCD,MAAAA,KAAK,CAACf,KAAN,GAAcgB,MAAM,CAACZ,OAArB;AACD,KAHU;AAIX,KAACP,QAAQ,CAACoB,QAAV,GAAqB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAACf,KAAN,GAAc,OAAd;AACD,KANU;AAOX,KAACG,WAAW,CAACW,SAAb,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAACf,KAAN,GAAcgB,MAAM,CAACZ,OAArB;AACD,KATQ;AAUT,KAACD,WAAW,CAACc,QAAb,GAAwB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACf,KAAN,GAAc,OAAd;AACD;AAZQ;AAXe,CAAD,CAAjC;AA0BA,OAAO,MAAM,KAAKO,aAAa,CAACW,OAAzB;AACP,eAAeX,aAAa,CAACY,OAA7B","sourcesContent":["import { createSlice , createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as BooksAPI from \"../../BooksAPI\";\n\nexport const getBooks = createAsyncThunk(\"fetchBooks\", async () => {\n    return BooksAPI.getAll().then(books =>{\n        console.log(books)\n        return books;\n      })\n  });\n  export const updateBooks = createAsyncThunk(\"updateBooks\", async (payload) => {\n    console.log(book);\n    console.log(status);\n    // return BooksAPI.update(book, status).then(books =>{\n    //     console.log(books)\n    //     // return getBooks();\n    //   })\n  });\nconst bookListSlice = createSlice({\n    name: 'bookListSlice',\n    initialState: {\n        books:[],\n        book:{},\n        error: null,\n        searchResultBooks:[]\n    },\n    reducers: {\n   \n    },\n    extraReducers: {\n        [getBooks.fulfilled]: (state, action) => {\n          state.books = action.payload;\n        },\n        [getBooks.rejected]: (state, action) => {\n          state.books = \"error\";\n        },\n        [updateBooks.fulfilled]: (state, action) => {\n            state.books = action.payload;\n          },\n          [updateBooks.rejected]: (state, action) => {\n            state.books = \"error\";\n          },\n      },\n})\nexport const {} = bookListSlice.actions;\nexport default bookListSlice.reducer;"]},"metadata":{},"sourceType":"module"}