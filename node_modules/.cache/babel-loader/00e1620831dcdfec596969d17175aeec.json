{"ast":null,"code":"var _jsxFileName = \"/home/dev/myreads/starter/myReads/src/features/changeShelfOptions/changeShelfOptions.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateBooks, getBooks } from \"../bookList/bookListSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeShelfOptions = props => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const payload = {};\n    payload.status = event.target.value;\n    payload.book = props.book;\n    dispatch(updateBooks(payload));\n    props.changeBookStatus(value, props.book);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-shelf-changer\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: props.shelf.value,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        disabled: true,\n        children: \"Move to...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"currentlyReading\",\n        children: \"Currently Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wantToRead\",\n        children: \"Want to Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"read\",\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangeShelfOptions, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ChangeShelfOptions;\nexport default ChangeShelfOptions;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeShelfOptions\");","map":{"version":3,"sources":["/home/dev/myreads/starter/myReads/src/features/changeShelfOptions/changeShelfOptions.js"],"names":["React","useDispatch","updateBooks","getBooks","ChangeShelfOptions","props","dispatch","handleChange","event","payload","status","target","value","book","changeBookStatus","shelf"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,2BAAtC;;;AACA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACpC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AAEA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,OAAO,GAAG,EAAhB;AACAA,IAAAA,OAAO,CAACC,MAAR,GAAiBF,KAAK,CAACG,MAAN,CAAaC,KAA9B;AACAH,IAAAA,OAAO,CAACI,IAAR,GAAeR,KAAK,CAACQ,IAArB;AACAP,IAAAA,QAAQ,CAACJ,WAAW,CAACO,OAAD,CAAZ,CAAR;AACAJ,IAAAA,KAAK,CAACS,gBAAN,CAAuBF,KAAvB,EAA8BP,KAAK,CAACQ,IAApC;AACD,GAND;;AAQE,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACoB;AAAQ,MAAA,KAAK,EAAER,KAAK,CAACU,KAAN,CAAYH,KAA3B;AAAkC,MAAA,QAAQ,EAAEL,YAA5C;AAAA,8BACE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADpB;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA1BD;;GAAMH,kB;UACaH,W;;;KADbG,kB;AA4BN,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateBooks, getBooks } from \"../bookList/bookListSlice\";\nconst ChangeShelfOptions = (props) => {\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    const payload = {};\n    payload.status = event.target.value;\n    payload.book = props.book;\n    dispatch(updateBooks(payload));\n    props.changeBookStatus(value, props.book);\n  }\n\n    return(\n        <div className=\"book-shelf-changer\">\n                            <select value={props.shelf.value} onChange={handleChange}>\n                              <option value=\"none\" disabled>\n                                Move to...\n                              </option>\n                              <option value=\"currentlyReading\">\n                                Currently Reading\n                              </option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n    )\n}\n\nexport default ChangeShelfOptions;"]},"metadata":{},"sourceType":"module"}